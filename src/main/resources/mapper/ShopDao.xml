<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.miller.o2o.dao.ShopDao">

    <resultMap id="shopMap" type="com.miller.o2o.entity.Shop">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="desc" property="desc"/>
        <result column="addr" property="addr"/>
        <result column="phone" property="phone"/>
        <result column="img" property="img"/>
        <result column="priority" property="priority"/>
        <result column="create_time" property="createTime"/>
        <result column="last_edit_time" property="lastEditTime"/>
        <result column="enable_status" property="enableStatus"/>
        <result column="advice" property="advice"/>
        <association property="area" column="area_id" javaType="com.miller.o2o.entity.Area">
            <id column="area_id" property="id"/>
            <result column="area_name" property="name"/>
        </association>
        <association property="shopCategory" column="shop_category_id" javaType="com.miller.o2o.entity.ShopCategory">
            <id column="shop_category_id" property="id"/>
            <result column="shop_category_name" property="name"/>
        </association>
        <association property="owner" column="owner_id" javaType="com.miller.o2o.entity.PersonInfo">
            <id column="owner_id" property="id"/>
            <result column="owner_name" property="name"/>
        </association>
    </resultMap>


    <insert id="insert" useGeneratedKeys="true" keyColumn="id" keyProperty="id"
            parameterType="com.miller.o2o.entity.Shop">
        insert into
        tb_shop
        (`name`, `desc`, `addr`, `phone`, `img`, priority, enable_status, advice, area_id, owner_id, shop_category_id)
        values
        (#{name}, #{desc}, #{addr}, #{phone}, #{img}, #{priority}, #{enableStatus}, #{advice}, #{area.id}, #{owner.id},
        #{shopCategory.id})
    </insert>

    <update id="update" parameterType="com.miller.o2o.entity.Shop">
        update tb_shop
        <set>
            <if test="name != null"> `name` = #{name}, </if>
            <if test="desc != null"> `desc` = #{desc}, </if>
            <if test="addr != null"> `addr` = #{addr}, </if>
            <if test="phone != null"> `phone` = #{phone}, </if>
            <if test="img != null"> `img` = #{img}, </if>
            <if test="priority != null"> `priority` = #{priority}, </if>
            <if test="enableStatus != null"> `enable_status` = #{enableStatus}, </if>
            <if test="advice != null"> `advice` = #{advice}, </if>
            <if test="area != null"> `area_id` = #{area.id}, </if>
            <if test="shopCategory != null"> `shop_category_id` = #{shopCategory.id}, </if>
        </set>
        where id = #{id}
        <if test="shop.owner!= null and shop.owner.id != null">
            and owner_id = #{owner.id}
        </if>
    </update>

    <select id="queryById" parameterType="long" resultMap="shopMap">
        select
            s.id,
            s.`name`,
            s.`desc`,
            s.`addr`,
            s.`phone`,
            s.`img`,
            s.priority,
            s.create_time,
            s.last_edit_time,
            s.enable_status,
            s.advice,
            s.area_id,
            s.owner_id,
            s.shop_category_id,
            a.name as area_name,
            sc.name as shop_category_name
        from tb_shop s
        left join tb_area a on s.area_id = a.id
        left join tb_shop_category sc on s.shop_category_id = sc.id
        where s.id = #{id}
        <if test="ownerId != null">
            and owner_id = #{ownerId}
        </if>
    </select>

    <select id="queryListByPage" parameterType="map" resultMap="shopMap">
        select
            s.id,
            s.`name`,
            s.`desc`,
            s.`addr`,
            s.`phone`,
            s.`img`,
            s.priority,
            s.create_time,
            s.last_edit_time,
            s.enable_status,
            s.advice,
            s.area_id,
            s.owner_id,
            s.shop_category_id,
            a.name as area_name,
            sc.name as shop_category_name
        from tb_shop s
        left join tb_area a on s.area_id = a.id
        left join tb_shop_category sc on s.shop_category_id = sc.id
        <where>
            <if test="shopCondition.shopCategory != null and shopCondition.shopCategory.id != null">
                and s.shop_category_id = #{shopCondition.shopCategory.id}
            </if>
            <if test="shopCondition.area != null and shopCondition.area.id != null">
                and s.area_id = #{shopCondition.area.id}
            </if>
            <if test="shopCondition.name != null">
                and s.name like '%${shopCondition.name}%'
            </if>
            <if test="shopCondition.enableStatus != null">
                and s.enable_status = #{shopCondition.enableStatus}
            </if>
            <if test="shopCondition.owner != null and shopCondition.owner.id != null">
                and s.owner_id = #{shopCondition.owner.id}
            </if>
        </where>
        ORDER BY
        s.priority desc
        <!--limit #{rowIndex},#{pageSize}-->
    </select>
    
<!--
    <select id="queryListCount" resultType="int">
        select
            count(1)
        from tb_shop s
        left join tb_area a on s.area_id = a.id
        left join tb_shop_category sc on s.shop_category_id = sc.id
        <where>
            <if test="shopCondition.shopCategory != null and shopCondition.shopCategory.id != null">
                and s.shop_category_id = #{shopCondition.shopCategory.id}
            </if>
            <if test="shopCondition.area != null and shopCondition.area.id != null">
                and s.area_id = #{shopCondition.area.id}
            </if>
            <if test="shopCondition.name != null">
                and s.name like '%${shopCondition.name}%'
            </if>
            <if test="shopCondition.enableStatus != null">
                and s.enable_status = #{shopCondition.enableStatus}
            </if>
            <if test="shopCondition.owner != null and shopCondition.owner.id != null">
                and s.owner_id = #{shopCondition.owner.id}
            </if>
        </where>
        limit #{rowIndex},#{pageSize}
    </select>
-->

</mapper>